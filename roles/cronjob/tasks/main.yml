---
- name: "Install package: {{ cronjob_package }}"
  ansible.builtin.package:
    name: "{{ cronjob_package }}"

- name: Copy /etc/cron.allow
  ansible.builtin.copy:
    dest: /etc/cron.allow
    owner: root
    group: root
    mode: 0640
    content: "{{ cronjob_allow_list }}"
  when: cronjob_allow_list is defined

- name: Copy /etc/cron.deny
  ansible.builtin.copy:
    dest: /etc/cron.deny
    owner: root
    group: root
    mode: 0640
    content: "{{ cronjob_deny_list }}"
  when: cronjob_deny_list is defined

- name: Delete /etc/cron.allow
  ansible.builtin.file:
    path: /etc/cron.allow
    state: absent
  when: cronjob_allow_list is undefined

- name: Delete /etc/cron.deny
  ansible.builtin.file:
    path: /etc/cron.deny
    state: absent
  when: cronjob_deny_list is undefined

- name: Apply cronjobs
  ansible.builtin.cron:
    cron_file: "{{ item.file | default(omit) }}"
    day: "{{ item.day | default('*') }}"
    env: "{{ item.env | default('no') }}"
    hour: "{{ item.hour | default('*') }}"
    job: "{% if cronjob_error_notification is defined and item.env is undefined and (item.error_notification is undefined or item.error_notification) %}{{ item.job +' '+ cronjob_error_notification +' '+ item.name }}{% else %}{{ item.job }}{% endif %}"
    minute: "{{ item.minute | default('*') }}"
    name: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
    user: "{{ item.user | default(omit) }}"
    weekday: "{{ item.weekday | default('*') }}"
  with_items: "{{ cronjob_entries }}"
  when: cronjob_entries is defined
  loop_control:
    label: "{{ item.name }}"
