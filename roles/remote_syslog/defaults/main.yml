---
# rsyslog should be started or stopped ?
remote_syslog_rsyslog_service_state: started

# rsyslog should start on boot ?
remote_syslog_rsyslog_service_enabled: true

# remote_syslog_server: 192.168.0.123
remote_syslog_server_port: 514
remote_syslog_server_protocol: tcp

# Include /etc/rsyslog.d/*.conf configuration files ?
remote_syslog_include_rsyslog_d: true

# set journald as persistent and forward to rsyslog
remote_syslog_journald_ini:
  - { section: Journal, option: Storage, value: persistent }
  - { section: Journal, option: SystemMaxUse, value: 3G }
  - { section: Journal, option: ForwardToSyslog, value: "yes" }
  - { section: Journal, option: MaxLevelSyslog, value: debug }

# rsyslog.conf to forward only
remote_syslog_rsyslog_conf: |
  # set rsyslog to forward only
  module(load="imuxsock") # system logging
  {% if ansible_virtualization_type != 'lxc' %}
  module(load="imklog")   # kernel logging
  {% endif %}
  {% if remote_syslog_include_rsyslog_d %}
  $IncludeConfig /etc/rsyslog.d/*.conf
  {% endif %}

  # use a disk queue & forward anything received to a remote server 
  # and have buffering applied automatically when it goes down.
  $WorkDirectory /var/spool/rsyslog
  $ActionQueueType LinkedList   # use asynchronous processing
  $ActionQueueFileName srvrfwd  # set file name, also enables disk mode
  $ActionResumeRetryCount -1    # infinite retries on insert failure
  $ActionQueueSaveOnShutdown on # save in-memory data if rsyslog shuts down

  *.* action(type="omfwd" target="{{ remote_syslog_server }}" port="{{ remote_syslog_server_port }}" protocol="{{ remote_syslog_server_protocol }}")
